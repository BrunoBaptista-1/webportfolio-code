{"ast":null,"code":"var _jsxFileName = \"/home/bruno/Documents/Bruno/webdev/dev-website/src/components/ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Message from \"./Message\";\nimport SendIcon from '@mui/icons-material/Send';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWindow() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [messageArray, setMessageArray] = useState([]);\n  function buildMessage(event) {\n    const text = event.target.value;\n    setMessage(text);\n  }\n  function sendMessage(event) {\n    if (message !== \"\") {\n      const payloadmessage = {\n        user: \"client\",\n        message: message\n      };\n      setMessageArray(previousMessages => {\n        return [...previousMessages, payloadmessage];\n      });\n      setMessage(\"\");\n      fetch('http://0.0.0.0:5005/webhooks/rest/webhook', {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sender: \"client\",\n          message: message\n        })\n      }).then(response => response.json()).then(data => {\n        data.map(response => {\n          if (response.text) {\n            const botResponse = {\n              user: \"bot\",\n              message: response.text\n            };\n            return setMessageArray(previousMessages => {\n              return [...previousMessages, botResponse];\n            });\n          } else return null;\n        });\n      });\n    }\n    event.preventDefault();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatComponent\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatBody\",\n      children: messageArray.slice(0).reverse().map((element, index) => {\n        return /*#__PURE__*/_jsxDEV(Message, {\n          index: index,\n          user: element.user,\n          message: element.message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatInput\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: buildMessage,\n          value: message,\n          id: \"chatText\",\n          name: \"chatText\",\n          placeholder: \"Type your message...\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send\",\n          onClick: sendMessage,\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 82\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatWindow, \"LiB7f1wN1SK+3H84eRoeEzLthPw=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","Message","SendIcon","ChatWindow","message","setMessage","messageArray","setMessageArray","buildMessage","event","text","target","value","sendMessage","payloadmessage","user","previousMessages","fetch","method","mode","headers","body","JSON","stringify","sender","then","response","json","data","map","botResponse","preventDefault","slice","reverse","element","index"],"sources":["/home/bruno/Documents/Bruno/webdev/dev-website/src/components/ChatWindow.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Message from \"./Message\";\nimport SendIcon from '@mui/icons-material/Send';\n\nfunction ChatWindow() {\n\n    const [message, setMessage] = useState(\"\");\n    const [messageArray, setMessageArray] = useState([]);\n\n    function buildMessage(event) {\n        const text = event.target.value;\n        setMessage(text);\n    }\n\n    function sendMessage(event) {\n\n        if (message !== \"\") {\n            const payloadmessage = {\n                user: \"client\",\n                message: message\n            }\n\n            setMessageArray(previousMessages => {\n                return [...previousMessages, payloadmessage]\n            })\n            setMessage(\"\");\n\n            fetch('http://0.0.0.0:5005/webhooks/rest/webhook', {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    sender: \"client\",\n                    message: message\n                })\n            })\n                .then((response) => response.json())\n                .then((data) => {\n\n                    data.map(response => {\n\n                        if (response.text) {\n                            const botResponse = {\n                                user: \"bot\",\n                                message: response.text\n                            }\n\n                            return setMessageArray(previousMessages => {\n                                return [...previousMessages, botResponse]\n                            })\n                        } else return null;\n\n                    })\n\n                });\n\n        }\n\n        event.preventDefault();\n    }\n\n    return (\n        <div className=\"chatComponent\">\n            <div className=\"chatBody\">\n                {messageArray.slice(0).reverse().map((element, index) => {\n\n                    return <Message key={index} index={index} user={element.user} message={element.message} />\n\n                })}\n            </div>\n            <div className=\"chatInput\">\n                <form>\n                    <input type=\"text\" onChange={buildMessage} value={message} id=\"chatText\" name=\"chatText\" placeholder=\"Type your message...\" autoComplete=\"off\"></input>\n                    <button className=\"send\" onClick={sendMessage} type=\"submit\"><SendIcon /></button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default ChatWindow;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}